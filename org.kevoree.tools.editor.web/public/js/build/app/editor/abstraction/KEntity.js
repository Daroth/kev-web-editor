define(["kotlin/kotlin"],function(e){function t(e,n){this._editor=e,this._type=n,this._name=n+t._COUNT++,this._wires=[],this._dictionary=require("factory/CFactory").getInstance().newDictionary(this)}return t._COUNT=0,t.prototype.getName=function(){return this._name},t.prototype.setName=function(e){this.getEditor().removeFromModel(this),this._name=e,this.getEditor().addToModel(this)},t.prototype.getType=function(){return this._type},t.prototype.getEditor=function(){return this._editor},t.prototype.getWires=function(){return this._wires},t.prototype.addWire=function(e){this._wires.indexOf(e)==-1&&this._wires.push(e)},t.prototype.getDictionary=function(){return this._dictionary},t.prototype.createWire=function(){var e=require("factory/CFactory").getInstance().newWire(this);return this.addWire(e),e},t.prototype.remove=function(){this.getEditor().removeEntity(this),this.clearWires()},t.prototype.disconnect=function(e){var t=this._wires.indexOf(e);t!=-1&&(this._wires.splice(t,1),this.getEditor().removeWire(e))},t.prototype.clearWires=function(){var e=this._wires.slice(0);for(var t=0;t<e.length;t++)e[t].disconnect();this._wires.length=0},t.prototype.hasWires=function(){if(this._wires.length>0)return!0;if(this._children)for(var e=0;e<this._children.length;e++)if(this._children[e].hasWires())return!0;return!1},t.prototype.getConnectedFragments=function(){return new e.ArrayList},t});